stages:
  - build
  - test
  - deploy

image: edbizarro/gitlab-ci-pipeline-php:7.2-alpine

# Cache modules in between jobs
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor
    - htdocs/content/themes/$WP_THEME/node_modules/

before_script:

    # sync submodules
  - git submodule sync --recursive
  - git submodule update --init --recursive
  
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
  ## with your own domain name. You can copy and repeat that command if you have
  ## more than one server to connect to.
  ##
  - ssh-keyscan -p $REMOTE_PORT $REMOTE_SERVER >> ~/.ssh/known_hosts
  # - ssh-keyscan -p $TEST_REMOTE_PORT $TEST_REMOTE_SERVER >> ~/.ssh/known_hosts
  # - ssh-keyscan -p $LIVE_REMOTE_PORT $LIVE_REMOTE_SERVER >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

Deploy to Wodby DEV:
  stage: deploy
  only:
    - develop
  script:
    - cp .env.sample .env
    - composer install
    - cd htdocs/content/themes/$WP_THEME
    - npm install
    - npm run dev
    - rsync -azC --exclude "htdocs/content/themes/$WP_THEME/node_modules" --exclude ".env"  -e "ssh -p $REMOTE_PORT"  /builds/$CI_PROJECT_PATH/ $REMOTE_USER@$REMOTE_SERVER:$REMOTE_PATH

Deploy to Wodby TEST:
  stage: deploy
  only:
    - master
  script:
    - cp .env.sample .env
    - composer install
    - cd htdocs/content/themes/$WP_THEME
    - npm install
    - npm run production
    - rsync -azC --exclude "htdocs/content/themes/$WP_THEME/node_modules" --exclude ".env" -e "ssh -p $TEST_REMOTE_PORT"  /builds/$CI_PROJECT_PATH/ $REMOTE_USER@$TEST_REMOTE_SERVER:$REMOTE_PATH

Deploy to Wodby LIVE:
  stage: deploy
  only:
    - master
  script:
    - cp .env.sample .env
    - composer install
    - cd htdocs/content/themes/$WP_THEME
    - npm install
    - npm run production
    - rsync -azC --exclude "htdocs/content/themes/$WP_THEME/node_modules" --exclude ".env"  -e "ssh -p $LIVE_REMOTE_PORT"  /builds/$CI_PROJECT_PATH/ $REMOTE_USER@$LIVE_REMOTE_SERVER:$REMOTE_PATH
  when: manual